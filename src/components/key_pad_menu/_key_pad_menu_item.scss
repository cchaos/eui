/**
 * 1. If this class is applied to a button, we need to override the Chrome default font.
 * 2. If it has a BetaBadge, make sure only the first letter shows
 */
.euiKeyPadMenuItem {
  @include euiFont; /* 1 */
  // Disable indentation for transition legibility
  // sass-lint:disable-block indentation
  display: block;
  padding: $euiSizeXS;
  height: $euiKeyPadMenuSize;
  width: $euiKeyPadMenuSize;
  color: $euiTextSubduedColor;
  border: $euiBorderThin;
  border-color: transparent;
  border-radius: $euiBorderRadius;
  transition:
    border-color $euiAnimSpeedFast ease-in,
    box-shadow $euiAnimSpeedFast ease-in;

  // Using the aria selectors to ensure proper a11y
  &[aria-pressed='true'],
  &[aria-current],
  &.euiKeyPadMenuItem-isSelectedLabel {
    color: $euiTitleColor;
    border-color: $euiBorderColor;
  }

  &:not(:disabled):not(.euiKeyPadMenuItem-isDisabledLabel) {
    &:hover,
    &:focus {
      @include euiSlightShadow;
      border-color: $euiBorderColor;

      // sass-lint:disable-block mixins-before-declarations
      // sass-lint:disable-block nesting-depth
      @include euiAnimationsAllowed {
        .euiKeyPadMenuItem__icon {
          transform: translateY(0);
        }
      }
    }
  }

  // Hide the input if not selected, or being interacted with
  &:not(:hover):not(:focus):not(:focus-within):not(.euiKeyPadMenuItem-isSelectedLabel) {
    .euiKeyPadMenuItem__checkableInput {
      @include euiScreenReaderOnly;
    }
  }

  &:disabled,
  &.euiKeyPadMenuItem-isDisabledLabel {
    color: $euiButtonColorDisabledText;
    cursor: not-allowed;

    .euiKeyPadMenuItem__icon  {
      filter: grayscale(100%);

      svg * { // sass-lint:disable-line nesting-depth
        fill: $euiButtonColorDisabledText;
      }
    }

    // Ensure the input stays hidden when disabled
    .euiKeyPadMenuItem__checkableInput {
      @include euiScreenReaderOnly;
    }
  }
}

.euiKeyPadMenuItem__inner {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  position: relative;

  .euiKeyPadMenuItem__checkableInput,
  .euiKeyPadMenuItem__betaBadgeWrapper {
    position: absolute;
    top: $euiSizeXS;
    right: $euiSizeXS;
    z-index: 3;
  }

  .euiKeyPadMenuItem__betaBadge:not(.euiBetaBadge--iconOnly) {
    padding: 0 ($euiSizeM / 2);  /* 2 */
    overflow: hidden;  /* 2 */
    letter-spacing: 3rem;  /* 2 */
  }
}

.euiKeyPadMenuItem__betaBadge {
  @include size($euiKeyPadMenuItemBetaBadgeSize);
  line-height: $euiKeyPadMenuItemBetaBadgeSize;
  color: $euiColorFullShade;
  background-color: tintOrShade($euiColorLightShade, 50%, 0%);
  box-shadow: none;

  .euiBetaBadge__icon {
    @include size($euiSizeM);
  }
}

.euiKeyPadMenuItem__icon {
  transition: transform $euiAnimSpeedNormal $euiAnimSlightBounce;
  margin-bottom: $euiSizeM;
  transform: translateY(2px);
}

.euiKeyPadMenuItem__label {
  font-size: $euiFontSizeXS;
  font-weight: $euiFontWeightMedium;
  line-height: $euiSize;
  text-align: center;
}
