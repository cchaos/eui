/**
 * 1. Not always needed, but fixes an IE11 issue when flex-groups are nested under display: flex elements.
 * 2. IE requires a unit to grow.
 */

.euiFlexGroup {
  display: flex;
  align-items: stretch;
  flex-grow: 1; /* 1 */

  .euiFlexItem {
    flex-grow: 1;
    flex-basis: 0%; /* 2 */
  }
}

$flexGroupGutters: (
  gutterExtraSmall: $euiSizeXS,
  gutterSmall: $euiSizeS,
  gutterMedium: $euiSize,
  gutterLarge: $euiSizeL,
  gutterExtraLarge: $euiSizeXXL,
);

@each $gutterName, $gutterSize in $flexGroupGutters {
  $halfGutterSize: $gutterSize * 0.5;

  .euiFlexGroup--#{$gutterName} {
    margin: -$halfGutterSize;

    & > .euiFlexItem {
      margin: $halfGutterSize;
    }
  }
}

// Justify

$flexGroupJustify: (
  justifyContentSpaceEvenly: 'space-evenly',
  justifyContentSpaceBetween: 'space-between',
  justifyContentSpaceAround: 'space-around',
  justifyContentCenter: 'center',
  justifyContentFlexEnd: 'flex-end',
);

@each $justify, $style in $flexGroupJustify {
  .euiFlexGroup--#{$justify} {
    justify-content: #{$style};
  }
}

// Align

$flexGroupAlign: (
  alignItemsFlexStart: 'flex-start',
  alignItemsCenter: 'center',
  alignItemsFlexEnd: 'flex-end',
  alignItemsBaseline: 'baseline',
);

@each $align, $style in $flexGroupAlign {
  .euiFlexGroup--#{$align} {
    align-items: #{$style};
  }
}

// Direction

$flexGroupDirection: (
  directionRow: 'row',
  directionRowReverse: 'row-reverse',
  directionColumn: 'column',
  directionColumnReverse: 'column-reverse',
);

@each $direction, $style in $flexGroupDirection {
  .euiFlexGroup--#{$direction} {
    flex-direction: #{$style};
  }
}

// Wrap

.euiFlexGroup--wrap {
  flex-wrap: wrap;
}

// Responsive

@import '../../global_styling/variables/responsive';

@each $size in $euiBreakpointKeys {
  .euiFlexGroup--responsive--#{$size} {
    @include euiBreakpoint($size) {
      flex-wrap: wrap;
      margin: 0;

      & > .euiFlexItem {
        margin: 0;
        width: 100%;
        flex-basis: auto;
      }

      @each $gutterName, $gutterSize in $flexGroupGutters {
        &.euiFlexGroup--#{$gutterName} {
          & > .euiFlexItem:not(:last-of-type) {
            margin-bottom: $gutterSize;
          }
        }
      }
    }
  }
}
